class Solution {
private:
    vector<string>ans;
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        if (root == NULL){
            return ans;
        }
        dfs(root,to_string (root->val));
        return ans;
    }
    
    void dfs(TreeNode* root, string tempResult ) {
        
        if (root->left == NULL && root->right == NULL){
            ans.push_back(tempResult);
            return;
        }
        
        if (root->left){
            dfs(root->left, tempResult + "->" + to_string(root->left->val));
        }
        if (root->right){
            dfs(root->right, tempResult + "->" + to_string(root->right->val));

        }       
    }
};
